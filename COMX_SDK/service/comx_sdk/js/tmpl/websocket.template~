var socketio = require("socket.io");
var port = parseInt(process.argv[2]);

var websocket = (function(){
    function GenerateGUID()
    {
        var guid = "";
        for (var i = 1; i <= 32; i++){
            var n = Math.floor(Math.random()*16.0).toString(16);
            guid +=   n;
            if((i==8)||(i==12)||(i==16)||(i==20))
                guid += "-";
        }
        return guid;    
    }

    function do_nothing_cb(data)
    {
	//console.log('nothing: ' + JSON.stringify(data));
    }

    var socket = false;

    var exports = new Object();

    var callback_map_from_guid_to_fn = new Object();

    exports.Invoke = function(method_name, parameters, callback)
    {
        var json_content = {"method" : method_name, "methodid" : GenerateGUID(), "parameters" : parameters};
	if(callback != undefined)
            callback_map_from_guid_to_fn[json_content.methodid] = callback;
	else
	    callback_map_from_guid_to_fn[json_content.methodid] = do_nothing_cb;
        socket.emit("message", json_content);
    };

    var message_callback_map = new Object();

    exports.on = function(method_name, cb)
    {
        message_callback_map[method_name] = cb;   
    };

    exports.dispatch = function(data){
        var json_content = JSON.parse(data);
        if(json_content.methodid != undefined)
        {
            var callback = callback_map_from_guid_to_fn[json_content.methodid];
            if(typeof(callback) == 'function')
            {
                callback(json_content);
            }
        }
        if(json_content.method != undefined)
        {
            var msg_cb = message_callback_map[json_content.method];
            if(typeof(msg_cb) == 'function')
            {
                msg_cb(json_content);
            }
        }
    };

    exports.send = function(data){
	socket.emit('message', data);
    };

    exports.init = function(data){
	socket = data;
    };

    return exports;
})();

websocket.on("exit", function(data){
    process.exit();
});


socketio.listen(port).on('connection', function (socket){
    websocket.init(socket);
    socket.on('message', function (msg){
	console.log('Message Received: ', msg);
        websocket.dispatch(msg);
    });
});