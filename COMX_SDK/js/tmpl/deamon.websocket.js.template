/////////////////////////////////////////////////////////////////////////////////////////////////
// Please don't modified the following codes at any time.

var port = parseInt(process.argv[2]);
var debug = JSON.parse(process.argv[3]);
var home_dir = process.argv[4];
var root_dir = process.env['COMX_SDK'];

var deamon_service_id = "0x7f3c409a-0x7093-0x40c5-0xa4-0xbd-0x0e-0x1f-0x06-0x7a-0x06-0x76";
process.chdir(home_dir + 'js/');

var websocket = require(root_dir + 'js/socket.io/websocket.common.js');



function InvokeDeamonMgr(cb)

{

    websocket.RemoteInvoke('localhost', '20000', function(ws_remote){

        deamon_mgr = ws_remote;

        if(deamon_mgr)

        {

            cb(deamon_mgr, function()/*dispose callback*/{

                deamon_mgr.dispose();

            });

        }

        else

        {

            //alert('‘∂≥Ã¡¨Ω” ß∞‹');

            console.log('remote connect faile');

        }

    });

}



function OnInit()
{
    InvokeDeamonMgr(function(deamon_mgr, dispose_cb){

        deamon_mgr.Invoke('Register', 

            {'id' : deamon_service_id, 'name' : name, 'port' : port}, 

            function(data){

                if(!data.parameters.ret)

                {

                    websocket.InvokeLocal('Exit', {}, function(data){});

                }

                

                dispose_cb();

            }

        );

    });

    websocket.InvokeLocal('OnWebsocketReady', {}, function(data){
        //nothing.
    });
}

function OnConnectionsRefChanged(cnt)
{
    websocket.Invoke('ConnectionsRefChanged', {'num' : cnt}, function(data){});
}

websocket.start(port, debug, OnInit, OnConnectionsRefChanged);

websocket.on("exit", function(data){
    InvokeDeamonMgr(function(deamon_mgr, dispose_cb){

        deamon_mgr.Invoke('Unregister', 

            {'id' : deamon_service_id}, 

            function(data){

                dispose_cb();

                process.exit();

            }

        );

    });
});

websocket.on("Exit", function(data){
    websocket.InvokeLocal('Exit', {}, function(data){});
});

websocket.on("ShowWindow", function(data){
    websocket.InvokeLocal('ShowWindow', {}, function(data){});
});

process.on('uncaughtException', function (err) {
    console.error(err.stack);
    //console.log("Node NOT Exiting...");
    websocket.InvokeLocal('error', {"message" : err.message});
});

/////////////////////////////////////////////////////////////////////////////////////////////////
// Append your codes here please.

websocket.on('GetConnectionsNum', function(data){
    data.parameters = {'num' : websocket.GetConnectionsNum()};
    websocket.send(data);
});

websocket.on('GetPort', function(data){
    data.parameters = {'port' : port};
    websocket.send(data);
});

var name = '0x5015c1de-0x6a65-0x43d1-0xa2-0xb2-0xed-0x29-0x0f-0xde-0x29-0xbb';

websocket.on('GetName', function(data){
    data.parameters = {'name' : name};
    websocket.send(data);
});

websocket.on('GetID', function(data){
    data.parameters = {'id' : deamon_service_id};
    websocket.send(data);
});

websocket.on('ShowDeamonMgr', function(data){
    InvokeDeamonMgr(function(deamon_mgr, dispose_cb){

        deamon_mgr.Invoke('ShowMainWindow', {}, 

            function(idata){

                dispose_cb();

            }

        );

    });
});
